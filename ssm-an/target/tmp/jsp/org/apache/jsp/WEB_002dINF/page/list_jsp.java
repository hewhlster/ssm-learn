package org.apache.jsp.WEB_002dINF.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_c_forEach_var_items;
  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_fmt_formatDate_value_pattern_nobody;
  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_jack_parination_url_pageSize_nobody;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _jspx_tagPool_c_forEach_var_items = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _jspx_tagPool_fmt_formatDate_value_pattern_nobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _jspx_tagPool_jack_parination_url_pageSize_nobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _jspx_tagPool_c_forEach_var_items.release();
    _jspx_tagPool_fmt_formatDate_value_pattern_nobody.release();
    _jspx_tagPool_jack_parination_url_pageSize_nobody.release();
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title>SSM(Spring SpringMVC Mybatis)学习系统</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("css/bootstarp/css/bootstrap.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("datetimepicker/css/bootstrap-datetimepicker.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("bootstrapvalidator/css/bootstrapValidator.css\"/>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<nav class=\"navbar navbar-default\" role=\"navigation\">\r\n");
      out.write("\t\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#mymenu\">\r\n");
      out.write("\t\t\t\t\t<span class=\"sr-only\">fanjianjua</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<a href=\"#\" class=\"navbar-brand\">\r\n");
      out.write("\t\t\t\t\t&nbsp;&nbsp;SSM学习系统\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"navbar-collapse\" id=\"mymenu\">\r\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t\t<li>&nbsp;&nbsp;</li>\r\n");
      out.write("\t\t\t\t\t<li>欢迎您【");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${logineduser.username}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("】<a href=\"");
      out.print(basePath);
      out.write("user/logout.do\">退出</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"\">\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"col-lg-10\">\r\n");
      out.write("\t\t\t<div id=\"\" class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t<div id=\"\" class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"panel-title\">查询模块</h4>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t<form class=\"form-inline\" action=\"");
      out.print(basePath);
      out.write("emp/list.do\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"control-label\" for=\"coursename\">员工编号</label>\r\n");
      out.write("\t\t\t\t\t\t<input value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${param.empno }", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("' id=\"coursename\" class=\"form-control\" name=\"empno\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"control-label\" for=\"coursename\">员工姓名</label>\r\n");
      out.write("\t\t\t\t\t\t<input  value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${param.ename }", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("'id=\"coursename\" class=\"form-control\" name=\"ename\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"control-label\" for=\"coursename\">工种</label>\r\n");
      out.write("\t\t\t\t\t\t<input  value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${param.job }", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("'id=\"coursename\" class=\"form-control\" name=\"job\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-danger btn-small\" id=\"search\">查询</button>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"col-lg-10\">\r\n");
      out.write("\t\t\t<div id=\"\" class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t<h4>增、删、编辑模块</h4></div>\r\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-default btn-small\" id=\"allselect\">全选</button>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-danger btn-small\" id=\"inverseselect\">返选</button>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-primary btn-small\" id=\"deleteselect\" >删除选中员工</button>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-success btn-small\" id=\"newselect\" data-target=\"#newdialog\">新增</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t<h2>员工信息</h2>\r\n");
      out.write("\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-bordered table-striped\">\r\n");
      out.write("\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t<col style=\"width:50px;align-items: auto;\">\r\n");
      out.write("\t\t\t\t\t\t<col style >\r\n");
      out.write("\t\t\t\t\t\t<col style >\r\n");
      out.write("\t\t\t\t\t\t<col style >\r\n");
      out.write("\t\t\t\t\t\t<col style >\r\n");
      out.write("\t\t\t\t\t\t<col style >\r\n");
      out.write("\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th ></th>\r\n");
      out.write("\t\t\t\t\t\t<th>员工编号</th>\r\n");
      out.write("\t\t\t\t\t\t<th>员工姓名</th>\r\n");
      out.write("\t\t\t\t\t\t<th>工种</th>\r\n");
      out.write("\t\t\t\t\t\t<th>入职日期</th>\r\n");
      out.write("\t\t\t\t\t\t<th>部门</th>\r\n");
      out.write("\t\t\t\t\t\t<th>操作</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      _jspx_th_c_forEach_0.setPageContext(_jspx_page_context);
      _jspx_th_c_forEach_0.setParent(null);
      _jspx_th_c_forEach_0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.page.data }", java.lang.Object.class, (PageContext)_jspx_page_context, null));
      _jspx_th_c_forEach_0.setVar("e");
      int[] _jspx_push_body_count_c_forEach_0 = new int[] { 0 };
      try {
        int _jspx_eval_c_forEach_0 = _jspx_th_c_forEach_0.doStartTag();
        if (_jspx_eval_c_forEach_0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td><input type=\"checkbox\" class=\"select\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.empid }", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("\" ></td>\t\t\t\t\t\t\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.empno }", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.ename }", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.job }", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            if (_jspx_meth_fmt_formatDate_0((javax.servlet.jsp.tagext.JspTag) _jspx_th_c_forEach_0, _jspx_page_context, _jspx_push_body_count_c_forEach_0))
              return;
            out.write("  </td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.dept.dname }", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t\t\t\t\t\t\t<td>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-sm btn-info edit\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.empid}", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("\">编辑</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-sm btn-danger\" onclick=\"javascript:if( confirm('确认删除吗?')==true)location.href='");
            out.print(basePath);
            out.write("emp/delete.do?empid=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.empid}", java.lang.String.class, (PageContext)_jspx_page_context, null));
            out.write("'\">删除</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t</td>\r\n");
            out.write("\t\t\t\t\t\t</tr>\r\n");
            out.write("\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_forEach_0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_forEach_0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_forEach_0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_forEach_0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_forEach_0.doFinally();
        _jspx_tagPool_c_forEach_var_items.reuse(_jspx_th_c_forEach_0);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_jack_parination_0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 新增、编辑 模态框 -->\r\n");
      out.write("\t\t<div class=\"modal\" role=\"dialog\" id=\"newdialog\" tabindex=\"-1\" data-backdrop=\"static\">\r\n");
      out.write("\t\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"close\" data-dismiss=\"modal\" >\r\n");
      out.write("\t\t\t\t\t\t\t<span aria-hidden=\"false\">&times;</span>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<h4 class=\"modal-title\" id=\"newdialogtitle\">新增员工</h4>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<form class=\"form-horizontal\" id=\"empfrm\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"empid\" id=\"empid\" />\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"empno\" class=\"col-sm-2 control-label\">员工编号</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"empno\" name=\"empno\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"ename\" class=\"col-sm-2 control-label\">员工姓名</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"ename\" name=\"ename\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"job\" class=\"col-sm-2 control-label\">工种</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"job\" name=\"job\" class=\"form-control\" placeholder=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"hiredate\" class=\"col-sm-2 control-label\">入职日期</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input value=\"2018-1-27\" class=\"form-control\" id=\"hiredate\" name=\"hiredate\" placeholder=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"dept\" class=\"col-sm-2 control-label\">部门</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"dept\" name=\"did\" class=\"form-control\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!--  <input type=\"text\" id=\"dept\" name=\"dept\" class=\"form-control\" placeholder=\"\" />-->\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-danger btn-small\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-success btn-small\"  onclick=\"saveOrUpdate()\"  id=\"saveOrUpdata\" >保存</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<footer class=\"navbar navbar-inverse col-lg-12\" >\r\n");
      out.write("\t\t\t<div style=\"float:left\">\r\n");
      out.write("\t\t\t <h3 style=\"color:#fff\">腾龙软件工作室<h3>\r\n");
      out.write("\t\t\t <h3 style=\"color:#fff\">联系邮箱:<a href=\"mailto:hewlh@163.com\">hewlh@163.com</a><h3>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t\t <div style=\"float:left;margin-top: 20px;margin-left:50px\">\r\n");
      out.write("\t\t\t \t<span style=\"color:#fff\">公众号</span>\r\n");
      out.write("\t\t\t \t<img alt=\"\" src=\"");
      out.print(basePath );
      out.write("imgs/logo.jpg\" style=\"width:80px;height:80px\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t</footer>\r\n");
      out.write("\t</body>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("js/jquery-3.3.1.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("css/bootstarp/js/bootstrap.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("datetimepicker/js/bootstrap-datetimepicker.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("datetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("bootstrapvalidator/js/bootstrapValidator.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//绑定校验规则\r\n");
      out.write("\t\tfunction formValidator(){\r\n");
      out.write("\t\t\t////////////绑定新增表单校验\t\t\t\r\n");
      out.write("\t\t\t $('#empfrm').bootstrapValidator({\r\n");
      out.write("\t\t            message: 'This value is not valid',\r\n");
      out.write("\t\t            feedbackIcons: {/*输入框不同状态,显示图片的样式*/\r\n");
      out.write("\t\t                valid: 'glyphicon glyphicon-ok',\r\n");
      out.write("\t\t                invalid: 'glyphicon glyphicon-remove',\r\n");
      out.write("\t\t                validating: 'glyphicon glyphicon-refresh'\r\n");
      out.write("\t\t            },\r\n");
      out.write("\t\t            fields: {/*验证*/\r\n");
      out.write("\t\t                empno: {/*键名username和input name值对应*/\r\n");
      out.write("\t\t                    message: 'The username is not valid',\r\n");
      out.write("\t\t                    validators: {\r\n");
      out.write("\t\t                        notEmpty: {/*非空提示*/\r\n");
      out.write("\t\t                            message: '员工编号不能为空'\r\n");
      out.write("\t\t                        },\r\n");
      out.write("\t\t                        stringLength: {/*长度提示*/\r\n");
      out.write("\t\t                            min: 4,\r\n");
      out.write("\t\t                            max: 6,\r\n");
      out.write("\t\t                            message: '员工编号长度必须在4到6之间'\r\n");
      out.write("\t\t                        },\r\n");
      out.write("\t\t                        remote:{\r\n");
      out.write("\t\t                        \turl:\"");
      out.print(basePath);
      out.write("emp/checkempno.do\",\r\n");
      out.write("\t\t                            message:\"员工编号以存在，请换一个\"\r\n");
      out.write("\t\t                        }/*最后一个没有逗号*/\r\n");
      out.write("\t\t                    }\r\n");
      out.write("\t\t                },\r\n");
      out.write("\t\t                ename: {\r\n");
      out.write("\t\t                    message:'员工姓名无效',\r\n");
      out.write("\t\t                    validators: {\r\n");
      out.write("\t\t                        notEmpty: {\r\n");
      out.write("\t\t                            message: '员工姓名不能为空'\r\n");
      out.write("\t\t                        },\r\n");
      out.write("\t\t                        stringLength: {\r\n");
      out.write("\t\t                            min: 2,\r\n");
      out.write("\t\t                            max: 8,\r\n");
      out.write("\t\t                            message: '员工姓名长度必须在2到8之间'\r\n");
      out.write("\t\t                        }\r\n");
      out.write("\t\t                    }\r\n");
      out.write("\t\t                },\r\n");
      out.write("\t\t                job: {\r\n");
      out.write("\t\t                    validators: {\r\n");
      out.write("\t\t                        notEmpty: {\r\n");
      out.write("\t\t                            message: '工种不能为空'\r\n");
      out.write("\t\t                        },\r\n");
      out.write("\t\t                        stringLength: {\r\n");
      out.write("\t\t                            min: 2,\r\n");
      out.write("\t\t                            max: 8,\r\n");
      out.write("\t\t                            message: '工种必须在2到8之间'\r\n");
      out.write("\t\t                        }\r\n");
      out.write("\t\t                    }\r\n");
      out.write("\t\t                },\r\n");
      out.write("\t\t                hiredate:{\r\n");
      out.write("\t\t                \tvalidators:{\r\n");
      out.write("\t\t                \t\tnotEmpty:{\r\n");
      out.write("\t\t                \t\t\tmessage:\"入职日期不能为空\"\r\n");
      out.write("\t\t                \t\t},\r\n");
      out.write("\t\t                \t\tdate:{\r\n");
      out.write("\t\t                \t\t\tformat:'YYYY-MM-DD',\r\n");
      out.write("\t\t                \t\t\tmessage:\"日期格式不正\"\r\n");
      out.write("\t\t                \t\t}\r\n");
      out.write("\t\t                \t}\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t                /*\r\n");
      out.write("\t\t                dept:{\r\n");
      out.write("\t\t                \tvalidators:{\r\n");
      out.write("\t\t                \t\tnotEmpty:{\r\n");
      out.write("\t\t                \t\t\tmessage:\"部门编号不能为空\"\r\n");
      out.write("\t\t                \t\t},\r\n");
      out.write("\t\t                \t\tstringLength: {\r\n");
      out.write("\t\t                            min: 2,\r\n");
      out.write("\t\t                            max: 4,\r\n");
      out.write("\t\t  \t\t\t\t\t        message: '部门编号在2到4之间'\r\n");
      out.write("\t\t                        }\r\n");
      out.write("\t\t                \t}\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t                */\r\n");
      out.write("\t\t        \t}\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction saveOrUpdate(){\r\n");
      out.write("\t\t\t$('#empfrm').data('bootstrapValidator').validate();  \r\n");
      out.write("            if(!$('#empfrm').data('bootstrapValidator').isValid()){  \r\n");
      out.write("                return ;  \r\n");
      out.write("            } \r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(basePath);
      out.write("emp/saveorupdate.do\",\r\n");
      out.write("\t\t\t\tdata:$(\"#empfrm\").serialize(),\r\n");
      out.write("\t\t\t\tsuccess:function(json){\r\n");
      out.write("\t\t\t\t\tif(json.ret>=1){\r\n");
      out.write("\t\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.reload();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction detelselect(){\r\n");
      out.write("\t\t\tvar params=[];\r\n");
      out.write("\t\t\t$(\".select\").each(function(){\r\n");
      out.write("\t\t\t\t  if($(this).prop(\"checked\")){\r\n");
      out.write("\t\t\t\t\t  params.push($(this).val());\r\n");
      out.write("\t\t\t\t  }\r\n");
      out.write("\t\t\t  });\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(basePath);
      out.write("emp/deleteselect.do\",\r\n");
      out.write("\t\t\t\tdata:{\"ids\":params.join()},\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tsuccess:function(json){\r\n");
      out.write("\t\t\t\t\tif(json.ret>1){\r\n");
      out.write("\t\t\t\t\t\talert(\"删除\"+json.ret+\"员工信息\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.reload();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction edit(id){\r\n");
      out.write("\t\t\t//删除empno重复的校验\r\n");
      out.write("\t\t\t//$(\"#empfrm\").bootstrapValidator(\"removeField\",\"empno\");\r\n");
      out.write("\t\t\tvar did =\"\";\r\n");
      out.write("\t\t\t$.get(\r\n");
      out.write("\t\t\t\t\"");
      out.print(basePath);
      out.write("emp/detail.do\",\r\n");
      out.write("\t\t\t\t\"id=\"+id,\r\n");
      out.write("\t\t\t\tfunction(json){\r\n");
      out.write("\t\t\t\t\t$(\"#empid\").val(json.empid);\r\n");
      out.write("\t\t\t\t\t$(\"#empno\").val(json.empno);\r\n");
      out.write("\t\t\t\t\t$(\"#ename\").val(json.ename);\r\n");
      out.write("\t\t\t\t\t$(\"#job\").val(json.job);\r\n");
      out.write("\t\t\t\t\t$(\"#hiredate\").val(json.hiredate);\r\n");
      out.write("\t\t\t\t\t//$(\"#dept\").val(json.dept);\r\n");
      out.write("\t\t\t\t\tdid=json.dept.did;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\t\t\r\n");
      out.write("\t\t\t$(\"#newdialogtitle\").html(\"编辑员工\");\r\n");
      out.write("\t\t\t$(\"#newdialog\").modal(\"show\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#empno\").attr(\"disabled\",\"disabled\");//禁用员工编号控件\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//选中员工的部门,以下代码在调试时才能有用，待解决\r\n");
      out.write("\t\t\t$(\"#dept\").find(\"option[value='\"+did+\"']\").attr(\"selected\",\"selected\");\r\n");
      out.write("\t\t\t//alert(\"fdsa\");\r\n");
      out.write("\t\t\t//var js= \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//settimeout('$(\"#dept\").find(\"option[value=\"+did+\"]\").attr(\"selected\",\"selected\");',50);\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#dept\").val(did).trigger(\"change\")\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tDate.prototype.format = function(format)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t var o = {\r\n");
      out.write("\t\t \"M+\" : this.getMonth()+1, //month\r\n");
      out.write("\t\t \"d+\" : this.getDate(),    //day\r\n");
      out.write("\t\t \"h+\" : this.getHours(),   //hour\r\n");
      out.write("\t\t \"m+\" : this.getMinutes(), //minute\r\n");
      out.write("\t\t \"s+\" : this.getSeconds(), //second\r\n");
      out.write("\t\t \"q+\" : Math.floor((this.getMonth()+3)/3),  //quarter\r\n");
      out.write("\t\t \"S\" : this.getMilliseconds() //millisecond\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t if(/(y+)/.test(format)) format=format.replace(RegExp.$1,\r\n");
      out.write("\t\t (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));\r\n");
      out.write("\t\t for(var k in o)if(new RegExp(\"(\"+ k +\")\").test(format))\r\n");
      out.write("\t\t format = format.replace(RegExp.$1,\r\n");
      out.write("\t\t RegExp.$1.length==1 ? o[k] :\r\n");
      out.write("\t\t (\"00\"+ o[k]).substr((\"\"+ o[k]).length));\r\n");
      out.write("\t\t return format;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function(){\t\t\t\r\n");
      out.write("\t\t\t$(\".select\").each(function(){\r\n");
      out.write("\t\t\t\t$(this).prop(\"checked\",false);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t//初始化日期控件\r\n");
      out.write("\t\t\t$(\"#hiredate\").datetimepicker({\r\n");
      out.write("\t\t\t\t format:'yyyy-mm-dd',\r\n");
      out.write("\t\t\t     minView:'month',\r\n");
      out.write("\t\t\t     language: 'zh-CN',\r\n");
      out.write("\t\t\t     startDate: new Date(),\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#newselect\").click(function(){\r\n");
      out.write("\t\t\t\t$(\"#newdialogtitle\").html(\"新增员工\");\r\n");
      out.write("\t\t\t\t$(\"#empno\").removeAttr(\"disabled\");\r\n");
      out.write("\t\t\t\t$(\"#empid\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"#empno\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"#ename\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"#job\").val(\"\");\r\n");
      out.write("\t\t\t\t$(\"#hiredate\").val(new Date().format('yyyy-MM-dd'));\r\n");
      out.write("\t\t\t\t$(\"#dept\").val(\"\");\r\n");
      out.write("\t\t\t\t//$(\"#newdialog\").modal(\"hide\");\r\n");
      out.write("\t\t\t\t$(\"#newdialog\").modal(\"show\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#allselect\").click(function(){\r\n");
      out.write("\t\t\t\t$(\".select\").each(function(){\r\n");
      out.write("\t\t\t\t  $(this).prop(\"checked\",true);\r\n");
      out.write("\t\t\t\t  });\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#inverseselect\").click(function(){\r\n");
      out.write("\t\t\t\t$(\".select\").each(function(){\r\n");
      out.write("\t\t\t\t\t  if($(this).prop(\"checked\")){\r\n");
      out.write("\t\t\t\t\t  \t\t$(this).prop('checked',false);\r\n");
      out.write("\t\t\t\t\t  } else {\r\n");
      out.write("\t\t\t\t\t  \t\t$(this).prop('checked',true);\r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t  });\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#deleteselect\").click(function(){\r\n");
      out.write("\t\t\t\tif(confirm(\"确认删除\")==true){\r\n");
      out.write("\t\t\t\t\tdetelselect();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\".edit\").click(function(){\r\n");
      out.write("\t\t\t\tedit($(this).val());\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//绑定校验规则\r\n");
      out.write("\t\t\tformValidator();\r\n");
      out.write("\t\t\t/*********************************校验重置重点在这里 当modal隐藏时销毁验证再重新加载验证****************************************/        \r\n");
      out.write("\r\n");
      out.write("\t\t   //Modal验证销毁重构\r\n");
      out.write("\t\t    $('#newdialog').on('hide.bs.modal', function() {\r\n");
      out.write("\t\t        $(\"#empfrm\").data('bootstrapValidator').destroy();\r\n");
      out.write("\t\t        $('#empfrm').data('bootstrapValidator', null);\r\n");
      out.write("\t\t        formValidator();\r\n");
      out.write("\t\t    });\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//显示模态框时加载部门信息\r\n");
      out.write("\t\t\t$(\"#newdialog\").on('shown.bs.modal',function(){\r\n");
      out.write("\t\t\t\t//alert(\"sss\");\r\n");
      out.write("\t\t\t\t$(\"#dept\").empty();//先清空\r\n");
      out.write("\t\t\t\tvar html=\"\";\r\n");
      out.write("\t\t\t\t//发送AJAX请求取得部门信息\r\n");
      out.write("\t\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\"");
      out.print(basePath);
      out.write("dept/list.do\",\r\n");
      out.write("\t\t\t\t\t\tfunction(json){\r\n");
      out.write("\t\t\t\t\t\t\t$.each(json,function(idx,obj){\r\n");
      out.write("\t\t\t\t\t\t\t\t//加入dept下拉框\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#dept\").append(\"<option value=\"+obj.did+\">\"+obj.dname+\"</option>\");\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>\r\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_formatDate_0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_forEach_0, PageContext _jspx_page_context, int[] _jspx_push_body_count_c_forEach_0)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_formatDate_0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _jspx_tagPool_fmt_formatDate_value_pattern_nobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    _jspx_th_fmt_formatDate_0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_formatDate_0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_forEach_0);
    _jspx_th_fmt_formatDate_0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${e.hiredate }", java.util.Date.class, (PageContext)_jspx_page_context, null));
    _jspx_th_fmt_formatDate_0.setPattern("yyyy-MM-dd");
    int _jspx_eval_fmt_formatDate_0 = _jspx_th_fmt_formatDate_0.doStartTag();
    if (_jspx_th_fmt_formatDate_0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _jspx_tagPool_fmt_formatDate_value_pattern_nobody.reuse(_jspx_th_fmt_formatDate_0);
      return true;
    }
    _jspx_tagPool_fmt_formatDate_value_pattern_nobody.reuse(_jspx_th_fmt_formatDate_0);
    return false;
  }

  private boolean _jspx_meth_jack_parination_0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  jack:parination
    org.fjh.tag.Pagination _jspx_th_jack_parination_0 = (org.fjh.tag.Pagination) _jspx_tagPool_jack_parination_url_pageSize_nobody.get(org.fjh.tag.Pagination.class);
    _jspx_th_jack_parination_0.setPageContext(_jspx_page_context);
    _jspx_th_jack_parination_0.setParent(null);
    _jspx_th_jack_parination_0.setUrl((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${pageContext.request.contextPath}/emp/list.do", java.lang.String.class, (PageContext)_jspx_page_context, null));
    _jspx_th_jack_parination_0.setPageSize(new Integer(30));
    int _jspx_eval_jack_parination_0 = _jspx_th_jack_parination_0.doStartTag();
    if (_jspx_th_jack_parination_0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _jspx_tagPool_jack_parination_url_pageSize_nobody.reuse(_jspx_th_jack_parination_0);
      return true;
    }
    _jspx_tagPool_jack_parination_url_pageSize_nobody.reuse(_jspx_th_jack_parination_0);
    return false;
  }
}
